{"version":3,"sources":["validation/index.js","component/styles.js","generateID/index.js","component/popup/formObject/index.js","component/popup/popupAddEdit/popupFooter.js","component/popup/popupAddEdit/popup.js","component/popup/popupDelete.js","component/header.js","component/loading.js","component/alter/success.js","component/index.js","actions/index.js","constant/index.js","data.js","reducers/goalPlan.js","reducers/loading.js","reducers/alert.js","reducers/index.js","sagas/index.js","App.js","reportWebVitals.js","index.js"],"names":["validateObject","GoalPlanName","DateFrom","DateTo","onVali","value","val","undefined","checkSpace","replace","onValidate","name","message","stylesPopup","createUseStyles","row","alignItems","display","width","justifyContent","color","fontSize","colInput","marginTop","flexDirection","minHeight","rowInput","form","overflow","stylesIndex","main","cursor","backgroundColor","height","visibility","Datagrid","margin","modal","btnAdd","marginLeft","PagingInfo","Id","Math","random","toString","substr","GoalPlanID","randomId","Description","Priority","IsPermissionEditProportion","IsPermissionCancel","IsReview","EvaluationExpireDate","NumEvaluationLevel","IsCopyResult","LabelLevel1","LabelLevel2","LabelLevel3","IsApproved","ApprovalBeginDate","popupFooter","props","type","text","viewType","size","style","startIcon","FormPopup","listPlans","popupForm","closePopup","addPlan","updatePlan","detail","classes","useState","formObject","setForm","useEffect","checkDetail","Object","keys","length","validate","setvalidate","valiDefault","addPlanItem","closePopupAdd","editPlanItem","index","onChangeHandle","dragAnyWhere","darkTheme","open","onClose","className","onSubmit","e","preventDefault","vali","forEach","k","valiWhenSubmit","values","filter","element","some","item","findIndexPlan","findIndex","required","error","onChange","target","placeholder","inputProps","maxLength","marginBottom","clearAble","displayFormat","label","returnFormat","disabled","actionIconAt","min","moment","format","defaultValue","onKeyUp","checked","marginRight","dataSource","id","displayExpr","itemMultipleSize","valueObjectDefault","parseInt","DialogDelete","popupDelete","deleteTarget","comfirmDelete","timing","fullScreen","warningDescription","onCancel","onConfirm","pressESCToClose","header","onClick","setPopupForm","setTextNotify","defaultOpen","Loading","opacity","background","position","zIndex","top","right","left","bottom","success","notify","autoDisappear","horizontal","duration","vertical","mapDispatchToProps","getDatasRequest","actions","newPlan","connect","state","listTarget","goalPlan","loading","alertActive","alert","console","log","setPopupDelete","pageSize","setPageSize","pageCurrent","setPageCurrent","setDetail","renderMyCommand","data","setNotify","getDetail","handleDelete","stylesHeader","caption","fontWeight","border","rowAlternationEnabled","showBorders","showColumnLines","alignment","calculateCellValue","indexOf","headerCellRender","dataField","render","direction","defaultPageSize","pageIndex","mode","rowRenderingMode","fullWidth","listItemsPerPage","onChangePage","totalItems","onChangeItemsPerPage","submitForm","loadData","dataNew","Array","fill","push","initialState","myReducer","action","localStorage","getItem","setItem","JSON","stringify","parse","deletedPlan","combineReducers","rootSaga","CRUD","take","call","takeEvery","put","delay","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.278d5d49.chunk.js","sourcesContent":["import { onValidate } from 'diginet-core-ui/utils';\r\n\r\n\r\nexport const validateObject={\r\n    GoalPlanName: true,\r\n    DateFrom: true,\r\n    DateTo: true,\r\n}\r\n\r\nexport const onVali = (value) =>\r\n{\r\n    \r\n    const val = value === undefined || value === null ? \"\" : value;\r\n  \r\n    let checkSpace = val.replace(/ /g, '') === \"\" ? \"\" : val;\r\n    \r\n   return onValidate(checkSpace, { name: \"required\", message: \"\" || null });\r\n\r\n}\r\n","import { createUseStyles } from 'react-jss'\r\n\r\nexport const stylesPopup = createUseStyles({\r\n    row: {\r\n        alignItems: 'flex-start',\r\n        display: 'flex',\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        \"& .label\": {\r\n            color: \"#0095FF\",\r\n            fontSize: \"12px\"\r\n        }\r\n\r\n    },\r\n    colInput: {\r\n        marginTop: \"16.89px\",\r\n        display: 'flex',\r\n        width: \"100%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        \"& .DGN-UI-Dropdown-Form\": {\r\n            minHeight: \"30px\"\r\n        }\r\n    },\r\n    rowInput: {\r\n        alignItems: 'center',\r\n        marginTop: \"18.89px\",\r\n        display: 'flex',\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    form: {\r\n        overflow: \"auto\",\r\n        \"&::-webkit-scrollbar\": {\r\n            display: \"none\"\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const stylesIndex = createUseStyles({\r\n    main: {\r\n        \"& svg\": {\r\n            cursor: \"pointer\"\r\n        },\r\n        \"& .dx-header-row\": {\r\n            backgroundColor: \"#F6F6F9\",\r\n            height: \"40px\"\r\n        },\r\n        \"& .dx-data-row \": {\r\n            height: \"40px\"\r\n        },\r\n        \"& .dx-page\": {\r\n            visibility: \"hidden\",\r\n\r\n        },\r\n        \"& .dx-pager\": {\r\n            display: \"none\"\r\n        }\r\n\r\n    },\r\n    Datagrid: {\r\n        // width: \"1784px\",\r\n        margin: \"64px 40px\"\r\n    },\r\n    modal: {\r\n        width: \"696px\", height: \"914px\"\r\n    },\r\n    btnAdd: {\r\n        marginLeft: \"17.83px\", height: \"70px\", width: \"89px\"\r\n    },\r\n    PagingInfo: {\r\n        marginTop: \"28.82px\"\r\n    }\r\n})\r\n","export default function Id() {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n};","import randomId from \"../../../generateID\"\r\n const form=({\r\n    GoalPlanID: randomId(),\r\n    GoalPlanName: \"\",\r\n    DateFrom: \"\",\r\n    DateTo: \"\",\r\n    Description: \"\",\r\n    Priority: 1,\r\n    IsPermissionEditProportion: 0,\r\n    IsPermissionCancel: 0,\r\n    IsReview: 0,\r\n    EvaluationExpireDate: \"\",\r\n    NumEvaluationLevel: 1,\r\n    IsCopyResult: 0,\r\n    LabelLevel1: \"\",\r\n    LabelLevel2: \"\",\r\n    LabelLevel3: \"\",\r\n    IsApproved: 0,\r\n    ApprovalBeginDate: \"\"\r\n\r\n    \r\n});\r\nexport default form;","import React from 'react';\r\nimport {ModalFooter ,Button} from 'diginet-core-ui/components';\r\n\r\nfunction popupFooter(props) {\r\n    return (<ModalFooter>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        color=\"info \"\r\n                        text=\"Lưu\"\r\n                        viewType=\"filled\"\r\n                        size=\"small\"\r\n                        style={{ marginLeft: \"17.83px\", height: \"40px\", width: \"89px\" }}\r\n                        startIcon=\"save\"\r\n                        \r\n                    />\r\n        </ModalFooter>\r\n    );\r\n}\r\n\r\nexport default popupFooter;","// @flow\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Label, TextInput, DatePicker, NumberInput, Toggle, Dropdown, Modal, ModalHeader, ModalBody } from 'diginet-core-ui/components';\r\nimport { ArrowUp } from 'diginet-core-ui/icons';\r\nimport { onVali, validateObject } from \"../../../validation\"\r\nimport { stylesPopup } from \"../../styles\"\r\nimport formObject from \"../formObject\"\r\nimport ModalFooter from \"./popupFooter\"\r\nimport moment from \"moment\";\r\n\r\n\r\nfunction FormPopup(props)\r\n{\r\n    //props\r\n    const {\r\n        listPlans,\r\n        popupForm,\r\n        closePopup,\r\n        addPlan,\r\n        updatePlan,\r\n        detail\r\n    } = props;\r\n    //detail vatible\r\n    const classes = stylesPopup();\r\n    //form\r\n    const [form, setForm] = useState(formObject);\r\n    //when set State \r\n    useEffect(() =>\r\n    {\r\n        const checkDetail = Object.keys(detail).length;\r\n        checkDetail > 0 ? setForm(detail) : setForm(formObject)\r\n    }, [detail]);\r\n    //validation\r\n    const [validate, setvalidate] = useState(validateObject);\r\n    const valiDefault = validate;\r\n    //submit form\r\n    const submit = (e) =>\r\n    {\r\n\r\n        e.preventDefault();\r\n        let vali = {};\r\n        Object.keys(validate).forEach((k) =>\r\n        {\r\n            vali = { ...validate, ...vali, [k]: onVali(form[k]) }\r\n        })\r\n        setvalidate(vali);\r\n        // remove last item of validate.value and check all field = true\r\n        const valiWhenSubmit = Object.values(vali);\r\n        // find !=== true\r\n        const checkVali = valiWhenSubmit\r\n            .filter((element, index) => index < valiWhenSubmit.length - 1)\r\n            .some(item => item !== true);\r\n        // check edit or add\r\n        if (checkVali === false)\r\n        {\r\n            const findIndexPlan = listPlans.findIndex(item => item.GoalPlanID === form.GoalPlanID);\r\n            findIndexPlan === -1\r\n                ? addPlanItem()\r\n                : editPlanItem(findIndexPlan);\r\n        }\r\n    }\r\n    //add handle\r\n    const addPlanItem = () =>\r\n    {\r\n        //when checkVali not exist !== true   \r\n        closePopupAdd();\r\n        addPlan(form);\r\n\r\n    }\r\n    //edit handle\r\n    const editPlanItem = (index) =>\r\n    {\r\n        //when checkVali not exist !== true   \r\n        closePopupAdd();\r\n        updatePlan(index, form);\r\n\r\n    }\r\n    const closePopupAdd = () =>\r\n    {\r\n        closePopup();\r\n        setvalidate(valiDefault);\r\n    }\r\n    // //when onChange Input\r\n    const onChangeHandle = (value, name) =>\r\n    {\r\n        setForm({ ...form, [name]: value });\r\n        switch (name)\r\n        {\r\n            case \"GoalPlanName\":\r\n            case \"DateFrom\":\r\n            case \"DateTo\":\r\n                setvalidate({ ...validate, [name]: onVali(value), value: { ...validate.value, [name]: value } })\r\n                break\r\n            default:\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Modal\r\n            style={{ width: \"696px\", height: \"914px\" }}\r\n            dragAnyWhere\r\n            darkTheme={false}\r\n            open={popupForm}\r\n            onClose={closePopupAdd}\r\n        >\r\n            <form className={classes.form} onSubmit={submit} >\r\n                <ModalHeader>\r\n                    Thông tin bảng mục tiêu\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <div className={classes.row} style={{ marginTop: \"25.89px\", flexDirection: \"column \" }} >\r\n                        <div className={classes.colInput}>\r\n                            <Label required>\r\n                                Tên Mục Tiên\r\n                            </Label>\r\n                            <TextInput\r\n                                value={form.GoalPlanName.replace(/ /g, '') === \"\" ? \"\" : form.GoalPlanName}\r\n                                error={validate.GoalPlanName === true ? \"\" : validate.GoalPlanName}\r\n                                onChange={(e) => onChangeHandle(e.target.value, \"GoalPlanName\")}\r\n                                placeholder=\"Nhập\"\r\n\r\n                                inputProps={{\r\n                                    maxLength: 500,\r\n                                }}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className={classes.colInput}>\r\n                            <Label  >\r\n                                Mô tả\r\n                            </Label>\r\n                            <TextInput\r\n                                value={form.Description}\r\n                                placeholder=\"Nhập\"\r\n                                onChange={(e) => onChangeHandle(e.target.value, \"Description\")}\r\n\r\n                                inputProps={{\r\n                                    maxLength: 1000,\r\n\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.rowInput}>\r\n                            <div className={classes.colInput}>\r\n                                <DatePicker\r\n                                    value={form.DateFrom}\r\n                                    error={validate.DateFrom === true ? \"\" : validate.DateFrom}\r\n                                    style={{ marginBottom: \"0px\" }}\r\n                                    clearAble\r\n                                    displayFormat='DD/MM/YYYY'\r\n                                    label=\"Ngày bắt đầu\"\r\n                                    placeholder=\"dd/MM/yyyy\"\r\n                                    returnFormat='MM/DD/YYYY'\r\n                                    onChange={(e) => onChangeHandle(e.value, \"DateFrom\")}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={classes.colInput} style={{ marginLeft: \"28px\" }}>\r\n\r\n                                <DatePicker\r\n                                    disabled={form.DateFrom === \"\" ? true : false}\r\n                                    value={form.DateTo}\r\n                                    error={validate.DateTo === true ? \"\" : validate.DateTo}\r\n                                    style={{ marginBottom: \"0px\" }}\r\n                                    actionIconAt=\"end\"\r\n                                    clearAble\r\n                                    min={moment(form.DateFrom).format('YYYY-MM-DD')}\r\n                                    //min=\"2021-06-18\"\r\n                                    displayFormat='DD/MM/YYYY'\r\n                                    label=\"Ngày kết thúc\"\r\n                                    placeholder=\"dd/MM/yyyy\"\r\n                                    returnFormat='MM/DD/YYYY'\r\n                                    onChange={(e) => onChangeHandle(e.value, \"DateTo\")}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.colInput} style={{ marginLeft: \"28px\" }}>\r\n                                <Label >\r\n                                    Độ Ưu Tiên\r\n                                </Label>\r\n                                <NumberInput\r\n                                    value={form.Priority}\r\n                                    defaultValue={1}\r\n                                    style={{ margin: \"auto\" }}\r\n                                    placeholder=\"Nhập\"\r\n                                    onKeyUp={(e) => onChangeHandle(e.target.value, \"Priority\")}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.rowInput} style={{ width: \"50%\" }}>\r\n                            <Label >\r\n                                Cho phép nhân viên sửa trọng số\r\n                            </Label>\r\n                            <Toggle\r\n                                checked={form.IsPermissionEditProportion === 1 ? true : false}\r\n                                onChange={(e) => onChangeHandle(e.target.checked ? 1 : 0, \"IsPermissionEditProportion\")}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.rowInput} style={{ width: \"50%\" }}>\r\n                            <Label >\r\n                                Cho phép nhân viên hủy mục tiêu\r\n                            </Label>\r\n                            <Toggle\r\n                                checked={form.IsPermissionCancel === 1 ? true : false}\r\n                                onChange={(e) => onChangeHandle(e.target.checked ? 1 : 0, \"IsPermissionCancel\")}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className={classes.rowInput} style={{ width: \"auto\" }}>\r\n                            <ArrowUp />\r\n                            <Label className=\"label\">\r\n                                Thông tin review\r\n                            </Label>\r\n                        </div>\r\n                        <div className={classes.rowInput} style={{ width: \"70%\" }}>\r\n                            <div className={classes.rowInput} style={{ marginTop: \"0px\", }} >\r\n                                <Label >\r\n                                    Review mục tiêu\r\n                                </Label>\r\n                                <div style={{ marginRight: \"28.48px\", }}>\r\n                                    <Toggle\r\n                                        checked={form.IsReview === 1 ? true : false}\r\n                                        onChange={(e) => onChangeHandle(e.target.checked ? 1 : 0, \"IsReview\")}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.colInput} style={{ marginTop: \"0px\", }}>\r\n                                <DatePicker\r\n                                    // returnFormat='DD/MM/YYYY'\r\n                                    value={form.EvaluationExpireDate}\r\n                                    style={{ marginBottom: \"0px\" }}\r\n                                    clearAble\r\n                                    disabled={form.IsReview === 1 ? false : true}\r\n                                    label=\"Hạn review cuối\"\r\n                                    placeholder=\"dd/MM/yyyy\"\r\n                                    returnFormat='MM/DD/YYYY'\r\n                                    displayFormat='DD/MM/YYYY'\r\n                                    onChange={(e) => onChangeHandle(e.value, \"EvaluationExpireDate\")}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={classes.rowInput} style={{ width: \"85%\" }}>\r\n                            <div className={classes.colInput} >\r\n\r\n                                <Dropdown\r\n                                    disabled={form.IsReview === 1 ? false : true}\r\n                                    dataSource={[\r\n                                        {\r\n                                            id: '1',\r\n                                            name: \"Item\"\r\n                                        },\r\n                                        {\r\n                                            id: '2',\r\n                                            name: \"Item\"\r\n                                        },\r\n                                        {\r\n                                            id: '3',\r\n                                            name: \"Item\"\r\n                                        },\r\n                                    ]}\r\n                                    //renderItem={(data, index) => index + ' - ' + data.name}\r\n\r\n                                    style={{ width: \"159px\" }}\r\n                                    displayExpr=\"{id} - {name}\"\r\n                                    label=\"Số cấp review\"\r\n                                    placeholder=\"Text Dang Nhap\"\r\n                                    viewType=\"outlined\"\r\n                                    itemMultipleSize=\"small\"\r\n                                    valueObjectDefault={{\r\n                                        id: '1',\r\n                                        name: \"Item\"\r\n                                    }}\r\n                                    value={form.NumEvaluationLevel.toString()}\r\n                                    onChange={(e) => onChangeHandle(e.value, \"NumEvaluationLevel\")}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.rowInput}>\r\n                                <Label>\r\n                                    Cho phép sap chép kết quả cấp trước\r\n                                </Label>\r\n                                <div >\r\n                                    <Toggle\r\n\r\n                                        checked={form.IsCopyResult === 1 ? true : false}\r\n                                        disabled={form.IsReview === 1 ? false : true}\r\n                                        onChange={(e) => onChangeHandle(e.target.checked ? 1 : 0, \"IsCopyResult\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.colInput} >\r\n                            <Label >\r\n                                Label cấp 1\r\n                            </Label>\r\n                            <TextInput\r\n                                value={form.LabelLevel1}\r\n                                disabled={form.IsReview === 0 || parseInt(form.NumEvaluationLevel) !== 1 ? true : false}\r\n                                placeholder=\"Nhập\"\r\n                                inputProps={{\r\n                                    maxLength: 250\r\n                                }}\r\n                                onChange={(e) => onChangeHandle(e.target.value, \"LabelLevel1\")}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.colInput}>\r\n                            <Label >\r\n                                Label cấp 2\r\n                            </Label>\r\n                            <TextInput\r\n                                value={form.LabelLevel2}\r\n                                disabled={form.IsReview === 0 || parseInt(form.NumEvaluationLevel) !== 2 ? true : false}\r\n                                onChange={(e) => onChangeHandle(e.target.value, \"LabelLevel2\")}\r\n                                placeholder=\"Nhập\"\r\n                                inputProps={{\r\n                                    maxLength: 250\r\n                                }}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className={classes.colInput}>\r\n                            <Label >\r\n                                Label cấp 3\r\n                            </Label>\r\n                            <TextInput\r\n                                value={form.LabelLevel3}\r\n                                disabled={form.IsReview === 0 || parseInt(form.NumEvaluationLevel) !== 3 ? true : false}\r\n                                onChange={(e) => onChangeHandle(e.target.value, \"LabelLevel3\")}\r\n                                placeholder=\"Nhập\"\r\n                                inputProps={{\r\n                                    maxLength: 250\r\n                                }}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className={classes.rowInput} style={{ width: \"auto\" }}>\r\n                            <ArrowUp />\r\n                            <Label className=\"label\">\r\n                                Thông tin xét duyệt\r\n                            </Label>\r\n                        </div>\r\n                        <div className={classes.rowInput} >\r\n\r\n                            <div className={classes.rowInput} style={{ marginTop: \"0px\", }}>\r\n                                <Label >\r\n                                    Xem xét duyệt bảng mục tiêu\r\n                                </Label>\r\n                                <div style={{ marginRight: \"28.48px\" }}>\r\n                                    <Toggle\r\n\r\n                                        checked={form.IsApproved === 1 ? true : false}\r\n                                        onChange={(e) => onChangeHandle(e.target.checked ? 1 : 0, \"IsApproved\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.colInput} style={{ marginTop: \"0px\", }}>\r\n\r\n                                <DatePicker\r\n                                    value={form.ApprovalBeginDate}\r\n                                    returnFormat='MM/DD/YYYY'\r\n                                    style={{ marginBottom: \"0px\" }}\r\n                                    clearAble\r\n                                    label=\"Ngày bắt đầu xét duyệt\"\r\n                                    placeholder=\"DDDD, dd/MMMM/yyyy\"\r\n                                    displayFormat=\"DD/MM/YYYY\"\r\n                                    onChange={(e) => onChangeHandle(e.value, \"ApprovalBeginDate\")}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter />\r\n            </form>\r\n        </Modal>\r\n\r\n    </>\r\n}\r\nexport default FormPopup","// @flow\r\nimport * as React from 'react';\r\nimport { DangerPopup } from 'diginet-core-ui/components';\r\n\r\nexport default function DialogDelete(props)\r\n{\r\n  const { popupDelete, deleteTarget,closePopup } = props;\r\n  const {id} = popupDelete;\r\n\r\n  const comfirmDelete = () =>\r\n  {\r\n   \r\n    deleteTarget(id);\r\n    closePopup();\r\n  }\r\n\r\n  return <> <DangerPopup\r\n    open={popupDelete.open}\r\n    timing={3}\r\n    fullScreen\r\n    warningDescription={`Bạn Có Chắc Xóa Target ${id} Này`}\r\n    onClose={closePopup}\r\n    onCancel={comfirmDelete}\r\n    onConfirm={comfirmDelete}\r\n    pressESCToClose\r\n  /></>\r\n}\r\n","import React from 'react';\r\nimport { Button} from 'diginet-core-ui/components';\r\n\r\nfunction header(props) {\r\n    const clickAddHandle=()=>{\r\n        props.setPopupForm();\r\n        props.setTextNotify(\"Thêm\");\r\n        \r\n    }\r\n    return (\r\n        <div style={{ display: \"flex\", margin: \"0 41.17px\", alignItems: \"center\", justifyContent: \"flex-start\" }}>\r\n        <h4 style={{ color: \"#151A30\" }}>DANH SÁCH BẢNG MỤC TIÊU</h4>\r\n        <Button\r\n            color=\"primary\"\r\n            text=\"Thêm\"\r\n            viewType=\"filled\"\r\n            size=\"small\"\r\n            style={{ marginLeft: \"17.83px\", height: \"40px\", width: \"114px\" }}\r\n            startIcon=\"add\"\r\n            onClick={clickAddHandle}\r\n            defaultOpen={false}\r\n        />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default header;","// @flow\r\nimport * as React from 'react';\r\nimport { CircularProgress } from 'diginet-core-ui/components';\r\n\r\nexport default function Loading(props)\r\n{\r\n\r\n  return <div \r\n  style={{opacity:\"0.7\",background:\"white\",position:\"fixed\",zIndex:\"999999\",width:\"100%\",height:\"100%\"}}>\r\n  <CircularProgress  color=\"#123f5f\" style={{position:\"fixed\",margin:\"auto\",top:0,right:0,left:0,bottom:0}} size=\"md\" />\r\n  </div>\r\n}\r\n","import React from 'react';\r\nimport { Alert  } from 'diginet-core-ui/components';\r\n\r\nconst success = (props) => {\r\n    const {notify}=props;\r\n    return (\r\n        <>\r\n             <Alert\r\n                size='medium'\r\n                style={{width:\"50%\",margin:\"auto\"}}\r\n                color=\"success\"\r\n                autoDisappear\r\n                horizontal=\"center\"\r\n                duration={5}\r\n                onClose={function noRefCheck(){}}\r\n                text={`${notify} thành công`}\r\n                vertical=\"bottom\"\r\n      />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default success;\r\n","// @flow\r\nimport * as actions from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport Form from \"./popup/popupAddEdit/popup\";\r\nimport DialogDelete from \"./popup/popupDelete\";\r\nimport { Divider, PagingInfo } from 'diginet-core-ui/components';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport { Edit, Delete } from 'diginet-core-ui/icons';\r\nimport { stylesIndex } from \"./styles\"\r\nimport Header from \"./header\";\r\nimport Loading from \"./loading\"\r\nimport Alert from \"./alter/success\"\r\nimport\r\n{\r\n    DataGrid, Button as ButtonIcon, Column,\r\n    Paging, Scrolling\r\n} from 'devextreme-react/data-grid';\r\n\r\nfunction Index(props)\r\n{\r\n    const { getDatasRequest, loading, listTarget ,alertActive} = props;\r\n    console.log(alertActive)\r\n   \r\n    //request data\r\n    useEffect(() =>\r\n    {\r\n        getDatasRequest();\r\n    }, [getDatasRequest]);\r\n    const classes = stylesIndex();\r\n    const [popupForm, setPopupForm] = useState(false);\r\n    const [popupDelete, setPopupDelete] = useState({ open: false, id: \"\" });\r\n    //state page\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [pageCurrent, setPageCurrent] = useState(0);\r\n    //detail\r\n    const [detail, setDetail] = useState({});\r\n    const openPopup=()=>{\r\n        setPopupForm(true)\r\n    }\r\n    const closePopup = () =>\r\n    {\r\n        setDetail({});\r\n        setPopupForm(false);\r\n        setPopupDelete({ open: false, id: \"\" });\r\n    }\r\n \r\n    //get detail\r\n    const getDetail = (GoalPlanID) =>\r\n    {\r\n        //set Text notify\r\n        setNotify(`Cập Nhật ID: ${GoalPlanID}`);\r\n        //lay id\r\n        //loc array theo id\r\n        const detail = listTarget.filter(item => item.GoalPlanID === GoalPlanID);\r\n        setPopupForm(true);\r\n        //set vao state detail\r\n        setDetail(detail[0])\r\n    }\r\n    //handle delete\r\n    const handleDelete=(GoalPlanID)=>{\r\n        setNotify(`Đã Xóa ID : ${GoalPlanID}`);\r\n        setPopupDelete({ open: true, id: GoalPlanID });\r\n    }\r\n    const renderMyCommand = (e, index) =>\r\n    {\r\n        const { GoalPlanID } = e.row.data;;\r\n        return index === 1\r\n            ? <div style={{ display: \"inline\" }} onClick={() => getDetail(GoalPlanID)}><Edit /></div>\r\n            : <div style={{ display: \"inline\" }} onClick={()=>handleDelete(GoalPlanID)}><Delete /></div>;\r\n    };\r\n    const rowIndex = (e) =>\r\n    {\r\n        return props.listTarget.indexOf(e);\r\n    }\r\n    const renderDateHandle = (data) =>\r\n    {\r\n\r\n        return data.DateFrom === null ? \"\" : data.DateFrom + \" - \" + data.DateTo\r\n    }\r\n    ///notify alert\r\n    const [notify,setNotify]=useState(\"\");\r\n    const setTextNotify=(text)=>{\r\n        setNotify(text);\r\n    }\r\n    const stylesHeader = (caption) => (<span style={{ fontSize: 13, color: \"black\", fontWeight: \"bold\", marginBottom: \"40px\" }}>{caption}</span>)\r\n    return <div className={classes.main}>\r\n        {loading ? <Loading /> : \"\"}\r\n        <div\r\n            //  width=\"1864px\" height=\"501px\"\r\n\r\n            style={{ margin: \"auto\", border: \"none\" }} >\r\n            <Header setPopupForm={openPopup} setTextNotify={setTextNotify} />\r\n            <Divider />\r\n            <div className={classes.Datagrid}>\r\n\r\n                <DataGrid\r\n                    height={245}\r\n                    rowAlternationEnabled={true}\r\n                    dataSource={listTarget}\r\n                    showBorders={false}\r\n                    showColumnLines={false}\r\n                //onValidate(e.target.value, {name: \"required\", message: \"\" || null})\r\n                >\r\n                    <Column alignment=\"left\" calculateCellValue={rowIndex} width={50} headerCellRender={() => stylesHeader(\"STT\")} />\r\n                    <Column alignment=\"left\" caption=\"Name\" width={200} dataField=\"GoalPlanName\" headerCellRender={() => stylesHeader(\"TÊN HẠNG MỤC TIÊU BIỂU\")} />\r\n                    <Column alignment=\"left\" width={400} dataField=\"Description\" headerCellRender={() => stylesHeader(\"MÔ TẢ\")} />\r\n                    <Column alignment=\"left\" width={200} calculateCellValue={renderDateHandle} headerCellRender={() => stylesHeader(\"KHOẢNG THỜI GIAN\")} />\r\n                    <Column alignment=\"left\" width={200} dataField=\"Priority\" headerCellRender={() => stylesHeader(\"ĐỘ ƯU TIÊN\")} />\r\n                    <Column alignment=\"left\" width={600} type=\"buttons\" >\r\n                        <ButtonIcon\r\n                            render={(e) => renderMyCommand(e, 1)}\r\n                        />\r\n                        <Divider direction=\"vertical\" />\r\n                        <ButtonIcon\r\n                            render={(e) => renderMyCommand(e, 2)}\r\n                        />\r\n                    </Column>\r\n                    {/* <Pager allowedPageSizes={pageSizes} showPageSizeSelector={true} /> */}\r\n                    <Paging defaultPageSize={10} />\r\n                    <Paging\r\n\r\n                        pageIndex={pageCurrent}\r\n                        pageSize={pageSize}\r\n                    />\r\n                    <Scrolling mode=\"virtual\" />\r\n                    <Scrolling rowRenderingMode='virtual' />\r\n\r\n                </DataGrid>\r\n                <PagingInfo\r\n                    className={classes.PagingInfo}\r\n                    fullWidth={true}\r\n                    listItemsPerPage={[\r\n                        10,\r\n                        20,\r\n                        40,\r\n                        50\r\n                    ]}\r\n                    onChangePage={(value) => setPageCurrent(value - 1)}\r\n                    totalItems={props.listTarget.length}\r\n                    onChangeItemsPerPage={(value) => setPageSize(value)} />\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <Form\r\n            popupForm={popupForm}\r\n            closePopup={closePopup}\r\n            submitForm={props.submitForm}\r\n            addPlan={props.addPlan}\r\n            updatePlan={props.updatePlan}\r\n            //get listPlans\r\n            listPlans={listTarget}\r\n            /// gui detail qua\r\n            detail={detail}\r\n        />\r\n        <DialogDelete  closePopup={closePopup} popupDelete={popupDelete} deleteTarget={props.deleteTarget} />\r\n        {alertActive ? <Alert notify={notify}/> : \"\" } \r\n        \r\n    </div>\r\n\r\n}\r\n\r\n///connect redux\r\n//get State\r\nconst mapStateToProps = state => ({\r\n    listTarget: state.goalPlan,\r\n    loading: state.loading,\r\n    //state alert\r\n    alertActive: state.alert\r\n\r\n});\r\n//DISPATCH\r\nconst mapDispatchToProps = {\r\n    //request data\r\n    getDatasRequest: actions.getDatasRequest,\r\n    //Delete\r\n    deleteTarget: (id) => actions.deleteTarget(id),\r\n    //addPlan\r\n    addPlan: (newPlan) => actions.addPlan(newPlan),\r\n    //update \r\n    updatePlan: (index,newPlan) => actions.updatePlan(index,newPlan),\r\n\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\r\n","import * as types from \"../constant\"\r\nexport const pageSize = (quantity) =>\r\n{\r\n    return {\r\n        type: types.ITEM_IN_PAGE,\r\n        quantity\r\n    }\r\n}\r\nexport const currentPage = (index) =>\r\n{\r\n    return {\r\n        type: types.CURRENT_PAGE,\r\n        index\r\n    }\r\n}\r\n//data\r\n//request\r\nexport const getDatasRequest = () =>\r\n{\r\n    return {\r\n        type: types.GET_DATA_REQUEST,\r\n    }\r\n}\r\n//target\r\nexport const loadDataTarget = () =>\r\n{\r\n    return {\r\n        type: types.LOAD_DATA_TARGET,\r\n    }\r\n}\r\n//delete target\r\nexport const deleteTarget = (id) =>\r\n{\r\n    return {\r\n        type: types.DELETE_ITEM_TARGET,\r\n        id\r\n    }\r\n}\r\n//add plan\r\nexport const addPlan = (newPlan) =>\r\n{\r\n    return {\r\n        type: types.ADD_PLAN,\r\n        newPlan,\r\n    }\r\n}\r\n//upodate\r\nexport const updatePlan = (index,newPlan) =>\r\n{\r\n    return {\r\n        type: types.UPDATE_PLAN,\r\n        newPlan,\r\n        index\r\n    }\r\n}","//page\r\nexport const ITEM_IN_PAGE = \"ITEM_IN_PAGE\"\r\nexport const CURRENT_PAGE = \"CURRENT_PAGE\"\r\n    //plan\r\nexport const LOAD_DATA_TARGET = \"LOAD_DATA_TARGET\"\r\nexport const DELETE_ITEM_TARGET = \"DELETE_ITEM_TARGET\"\r\nexport const ADD_PLAN = \"ADD_PLAN\"\r\nexport const UPDATE_PLAN = \"UPDATE_PLAN\"\r\nexport const GET_DATA_REQUEST = \"GET_DATA_REQUEST\"\r\n\r\n///\r\nexport const ALERT_SUCCESS = \"ALERT_SUCCESS\"\r\n\r\n","import randomId from \"./generateID\"\r\nconst loadData=()=>{\r\n    const dataNew=[];\r\n    (Array(4).fill(0).forEach((element, index) => {\r\n        dataNew.push({\r\n            GoalPlanID: randomId(),\r\n            GoalPlanName: \"Tên mục tiêu \" + index,\r\n            DateFrom: \"06/15/2021 \",\r\n            DateTo: \"06/20/2021\",\r\n            Description: \"Đây là mô tả bảng mục tiêu này\",\r\n            Priority: index % 2 === 0 ? 2 : 1,\r\n            IsPermissionEditProportion: 1,\r\n            IsPermissionCancel: 1,\r\n            IsReview: 1,\r\n            EvaluationExpireDate: \"01/01/2020 \",\r\n            NumEvaluationLevel: 1,\r\n            IsCopyResult: 1,\r\n            LabelLevel1: \"Level1\",\r\n            LabelLevel2: \"Level2\",\r\n            LabelLevel3: \"Level3\",\r\n            IsApproved: 1,\r\n            ApprovalBeginDate: \"01/01/2020\"\r\n        })\r\n    }))\r\n    return dataNew;\r\n}\r\nexport default loadData;\r\n","import data from \"../data\"\r\nconst initialState = [];\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_DATA_TARGET\":\r\n                // localStorage.clear();\r\n            if (localStorage && localStorage.getItem(\"plan\")) {\r\n                return JSON.parse(localStorage.getItem(\"plan\"))\r\n            } else {\r\n                localStorage.setItem(\"plan\", JSON.stringify(data()));\r\n                return JSON.parse(localStorage.getItem(\"plan\"))\r\n            }\r\n        case \"DELETE_ITEM_TARGET\":\r\n            const deletedPlan = state.filter(item => item.GoalPlanID !== action.id);\r\n            localStorage.setItem(\"plan\", JSON.stringify(deletedPlan));\r\n            return deletedPlan;\r\n        case \"ADD_PLAN\":\r\n            const addPlan=state.push(action.newPlan);\r\n            localStorage.setItem(\"plan\", JSON.stringify(state));\r\n            return addPlan;\r\n        case \"UPDATE_PLAN\":\r\n             const updatePlan=state;\r\n              updatePlan[action.index]=action.newPlan;\r\n             localStorage.setItem(\"plan\", JSON.stringify(updatePlan));\r\n             return  updatePlan;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default myReducer;","const initialState = false;\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SHOW_LOADING\":\r\n           return true;\r\n        case \"HIDE_LOADING\":\r\n           return false;\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default myReducer;","const initialState = false;\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ALERT_SUCCESS\":\r\n           return true;\r\n        case \"HIDE_ALERT\":\r\n            return false;\r\n      default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default myReducer;","\r\nimport goalPlan from \"./goalPlan\";\r\nimport loading from \"./loading\"\r\nimport alert from \"./alert\";\r\n\r\nimport {\r\n    combineReducers\r\n} from \"redux\";\r\n\r\n\r\nconst myReducer = combineReducers({\r\n    goalPlan,\r\n    loading,\r\n    alert\r\n})\r\nexport default myReducer;","import\r\n  {\r\n    delay,\r\n    take,\r\n    takeEvery,\r\n    call,\r\n    put\r\n  } from \"redux-saga/effects\";\r\n\r\nexport default function* rootSaga()\r\n{\r\n  console.log(\"Request Data\")\r\n  while(true){\r\n    yield take('GET_DATA_REQUEST');\r\n    yield call(loadData);\r\n    yield takeEvery('ADD_PLAN',CRUD);\r\n    yield takeEvery('DELETE_ITEM_TARGET',CRUD);\r\n    yield takeEvery('UPDATE_PLAN',CRUD);\r\n  }\r\n  \r\n}\r\nfunction* loadData()\r\n{\r\n  yield put({\r\n    type: \"SHOW_LOADING\"\r\n  })\r\n  yield delay(2000);\r\n  yield put({\r\n    type: \"LOAD_DATA_TARGET\"\r\n  })\r\n  yield put({\r\n    type: \"HIDE_LOADING\"\r\n  })\r\n  console.log(\"đã cập nhật dữ liệu\");\r\n}\r\nfunction* CRUD()\r\n{\r\n  yield call(loadData);\r\n  console.log(\"alaoalo\")\r\n  yield put({\r\n    type: \"ALERT_SUCCESS\"\r\n  })\r\n  yield delay(1000);\r\n  yield put({\r\n    type: \"HIDE_ALERT\"\r\n  })\r\n}\r\n\r\n","import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport './App.css';\nimport Index from \"./component/index\"\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers/index\";\nimport rootSaga from \"./sagas\";\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Index />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}